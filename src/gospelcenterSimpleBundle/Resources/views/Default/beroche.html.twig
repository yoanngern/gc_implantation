{% extends "::layout.html.twig" %}

{% block title %}{{ parent() }} La Béroche{% endblock %}


{% block javascript %}
    {{ parent() }}

    <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-60150028-5', 'auto');
        ga('send', 'pageview');

    </script>

{% endblock %}

{% block body %}

    {% spaceless %}

        <section id="home" class="beroche">

            <h2>It's time for <span>something more</span><br/>
                Lancement <span>le 23 octobre 2016</span></h2>

            <div class="center">

                <div class="logo"></div>
            </div>

            <!--
            <div class="video-bg">
                <video id="bgvid" autoplay loop>

                    <source src="https://player.vimeo.com/external/181289916.hd.mp4?s=250cdab317603940c7f46f57779b08a24a2a8c55&profile_id=174"
                            type="video/mp4">
                </video>
            </div>
            -->

        </section>

        <section id="pres">
            <article class="content">
                <div class="col2">
                    <div class="left">
                        <h2> Pourquoi cette région ?</h2>
                        <p>C’est une région particulière pour nous, c'est là où nous habitons et nous avons à coeur de
                            la servir ! Le mot "Béroche" regroupe plusieurs villages de la région.Il signifie
                            "paroisse". La paroisse de St- Aubin (village de la région de la Béroche) était une grande
                            paroisse influente, qui a marqué positivement toute une époque et une génération.</p>
                        <h2>Pourquoi maintenant ?</h2>
                        <p>Nous rêvons depuis des années d'ouvrir une communauté dans notre région et nous croyons que
                            Dieu veut faire de grandes choses. Nous sommes plusieurs familles à avoir ce même projet à
                            coeur, et ces derniers mois, nous avons eu la conviction que le temps était venu ! Nous
                            voici déterminés et prêts à commencer une communauté vivante, centrée sur Jésus-Christ, et
                            multigénérationnelle !</p>

                    </div>
                    <div class="right">

                        <h2>Leadership</h2>
                        <p>Michaël et Francine Gerber sont mariés, et parents de 3 garçons. Mica est dessinateur en
                            génie civil et travaille dans un cabinet d'architecte à Lausanne. Ils désirent travailler en
                            équipe en reconnaissant les dons de chacun et sont entourés pour ce projet
                            de nombreux collaborateurs. </p>
                        <div class="video">
                            <iframe width="100%" height="100%"
                                    src="https://www.youtube.com/embed/iEI7TMocguE?rel=0&amp;showinfo=0" frameborder="0"
                                    allowfullscreen></iframe>
                        </div>
                    </div>
                </div>
            </article>
        </section>

        <section id="ppp">

            <div class="center">
                <h2><div>Positif + Pratique + Puissant</div></h2>

                <p>Encourager un style de vie chrétien qui motive, construit<br/>
                    et développe les capacités et les dons de chacun.</p>

                <p>Des activités, des enseignements qui rejoignent votre réalité.</p>

                <p>Le Gospel Center a le désir de vivre l'évangile de la façon la plus complète possible,<br/>
                    aussi dans la dimension de la guérison et du miraculeux.</p>
            </div>
        </section>

        <section class="infos" id="beroche">

            <article class="content">
                <h2>Je suis intéressé à en savoir plus</h2>

                <div class="box">

                    <div class="info">
                        <div class="icon" id="i"></div>
                        <p>Soirée d'intercession<br/><br/>
                            infos suivront</p>
                    </div>

                    <div class="info">
                        <div class="icon" id="map"></div>
                        <p>Lieu des célébrations<br/>
                            <br/>
                            Vaumarcus<br/>
                            (infos suivront)</p>
                    </div>

                    <div class="info">
                        <div class="icon" id="time"></div>
                        <p>Dimanches matins à 10h<br/>
                            <br/>
                            Première célébration<br/>
                            le 23 octobre 2016</p>
                    </div>

                </div>
            </article>
        </section>

        <section id="email">

            <div class="center">
                <h2>Informations pratiques</h2>
                <form method="POST" action="https://gospelcenterlabroche.activehosted.com/proc.php" id="_form_1_"
                      class="_form _form_1 _inline-form  _dark" novalidate>
                    <input type="hidden" name="u" value="1"/>
                    <input type="hidden" name="f" value="1"/>
                    <input type="hidden" name="s"/>
                    <input type="hidden" name="c" value="0"/>
                    <input type="hidden" name="m" value="0"/>
                    <input type="hidden" name="act" value="sub"/>
                    <input type="hidden" name="v" value="2"/>
                    <div class="_form-content">
                        <div class="_form_element _x00933405 _full_width ">
                            <label class="_form-label">
                                Recevoir plus d’infos par mail:
                            </label>
                            <div class="_field-wrapper">
                                <input type="text" name="email" placeholder="Inscrits ton e-mail" required/>
                            </div>
                        </div>
                        <div class="_button-wrapper _full_width">
                            <button id="_form_1_submit" class="_submit" type="submit">
                                Envoyer
                            </button>
                        </div>
                        <div class="_clear-element">
                        </div>
                    </div>
                    <div class="_form-thank-you" style="display:none;">
                    </div>
                </form>
                <script type="text/javascript">
                    window._show_thank_you = function (id, message, trackcmp_url) {
                        var form = document.getElementById('_form_' + id + '_'), thank_you = form.querySelector('._form-thank-you');
                        form.querySelector('._form-content').style.display = 'none';
                        thank_you.innerHTML = message;
                        thank_you.style.display = 'block';
                        if (typeof(trackcmp_url) != 'undefined' && trackcmp_url) {
                            // Site tracking URL to use after inline form submission.
                            _load_script(trackcmp_url);
                        }
                        if (typeof window._form_callback !== 'undefined') window._form_callback(id);
                    };
                    window._show_error = function (id, message, html) {
                        var form = document.getElementById('_form_' + id + '_'), err = document.createElement('div'), button = form.querySelector('button');
                        err.innerHTML = message;
                        err.className = '_error-inner _form_error _no_arrow';
                        var wrapper = document.createElement('div');
                        wrapper.className = '_form-inner';
                        wrapper.appendChild(err);
                        button.parentNode.insertBefore(wrapper, button);
                        if (html) {
                            var div = document.createElement('div');
                            div.className = '_error-html';
                            div.innerHTML = html;
                            err.appendChild(div);
                        }
                    };
                    window._load_script = function (url, callback) {
                        var head = document.querySelector('head'), script = document.createElement('script'), r = false;
                        script.type = 'text/javascript';
                        script.charset = 'utf-8';
                        script.src = url;
                        if (callback) {
                            script.onload = script.onreadystatechange = function () {
                                if (!r && (!this.readyState || this.readyState == 'complete')) {
                                    r = true;
                                    callback();
                                }
                            };
                        }
                        head.appendChild(script);
                    };
                    (function () {
                        if (window.location.search.search("excludeform") !== -1) return false;
                        var getCookie = function (name) {
                            var match = document.cookie.match(new RegExp('(^|; )' + name + '=([^;]+)'));
                            return match ? match[2] : null;
                        }
                        var setCookie = function (name, value) {
                            var now = new Date();
                            var time = now.getTime();
                            var expireTime = time + 1000 * 60 * 60 * 24 * 365;
                            now.setTime(expireTime);
                            document.cookie = name + '=' + value + '; expires=' + now + ';path=/';
                        }
                        var addEvent = function (element, event, func) {
                            if (element.addEventListener) {
                                element.addEventListener(event, func);
                            } else {
                                var oldFunc = element['on' + event];
                                element['on' + event] = function () {
                                    oldFunc.apply(this, arguments);
                                    func.apply(this, arguments);
                                };
                            }
                        }
                        var _removed = false;
                        var form_to_submit = document.getElementById('_form_1_');
                        var allInputs = form_to_submit.querySelectorAll('input, select, textarea'), tooltips = [], submitted = false;
                        var remove_tooltips = function () {
                            for (var i = 0; i < tooltips.length; i++) {
                                tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
                            }
                            tooltips = [];
                        };
                        var remove_tooltip = function (elem) {
                            for (var i = 0; i < tooltips.length; i++) {
                                if (tooltips[i].elem === elem) {
                                    tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);
                                    tooltips.splice(i, 1);
                                    return;
                                }
                            }
                        };
                        var create_tooltip = function (elem, text) {
                            var tooltip = document.createElement('div'), arrow = document.createElement('div'), inner = document.createElement('div'), new_tooltip = {};
                            if (elem.type != 'radio' && elem.type != 'checkbox') {
                                tooltip.className = '_error';
                                arrow.className = '_error-arrow';
                                inner.className = '_error-inner';
                                inner.innerHTML = text;
                                tooltip.appendChild(arrow);
                                tooltip.appendChild(inner);
                                elem.parentNode.appendChild(tooltip);
                            } else {
                                tooltip.className = '_error-inner _no_arrow';
                                tooltip.innerHTML = text;
                                elem.parentNode.insertBefore(tooltip, elem);
                                new_tooltip.no_arrow = true;
                            }
                            new_tooltip.tip = tooltip;
                            new_tooltip.elem = elem;
                            tooltips.push(new_tooltip);
                            return new_tooltip;
                        };
                        var resize_tooltip = function (tooltip) {
                            var rect = tooltip.elem.getBoundingClientRect();
                            var doc = document.documentElement, scrollPosition = rect.top - ((window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0));
                            if (scrollPosition < 40) {
                                tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _below';
                            } else {
                                tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _above';
                            }
                        };
                        var resize_tooltips = function () {
                            if (_removed) return;
                            for (var i = 0; i < tooltips.length; i++) {
                                if (!tooltips[i].no_arrow) resize_tooltip(tooltips[i]);
                            }
                        };
                        var validate_field = function (elem, remove) {
                            var tooltip = null, value = elem.value, no_error = true;
                            remove ? remove_tooltip(elem) : false;
                            if (elem.type != 'checkbox') elem.className = elem.className.replace(/ ?_has_error ?/g, '');
                            if (elem.getAttribute('required') !== null) {
                                if (elem.type == 'radio' || (elem.type == 'checkbox' && /any/.test(elem.className))) {
                                    var elems = form_to_submit.elements[elem.name];
                                    no_error = false;
                                    for (var i = 0; i < elems.length; i++) {
                                        if (elems[i].checked) no_error = true;
                                    }
                                    if (!no_error) {
                                        tooltip = create_tooltip(elem, "Please select an option.");
                                    }
                                } else if (elem.type == 'checkbox') {
                                    var elems = form_to_submit.elements[elem.name], found = false, err = [];
                                    no_error = true;
                                    for (var i = 0; i < elems.length; i++) {
                                        if (elems[i].getAttribute('required') === null) continue;
                                        if (!found && elems[i] !== elem) return true;
                                        found = true;
                                        elems[i].className = elems[i].className.replace(/ ?_has_error ?/g, '');
                                        if (!elems[i].checked) {
                                            no_error = false;
                                            elems[i].className = elems[i].className + ' _has_error';
                                            err.push("Checking %s is required".replace("%s", elems[i].value));
                                        }
                                    }
                                    if (!no_error) {
                                        tooltip = create_tooltip(elem, err.join('<br/>'));
                                    }
                                } else if (elem.tagName == 'SELECT') {
                                    var selected = true;
                                    if (elem.multiple) {
                                        selected = false;
                                        for (var i = 0; i < elem.options.length; i++) {
                                            if (elem.options[i].selected) {
                                                selected = true;
                                                break;
                                            }
                                        }
                                    } else {
                                        for (var i = 0; i < elem.options.length; i++) {
                                            if (elem.options[i].selected && !elem.options[i].value) {
                                                selected = false;
                                            }
                                        }
                                    }
                                    if (!selected) {
                                        no_error = false;
                                        tooltip = create_tooltip(elem, "Please select an option.");
                                    }
                                } else if (value === undefined || value === null || value === '') {
                                    elem.className = elem.className + ' _has_error';
                                    no_error = false;
                                    tooltip = create_tooltip(elem, "This field is required.");
                                }
                            }
                            if (no_error && elem.name == 'email') {
                                if (!value.match(/^[\+_a-z0-9-'&=]+(\.[\+_a-z0-9-']+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,})$/i)) {
                                    elem.className = elem.className + ' _has_error';
                                    no_error = false;
                                    tooltip = create_tooltip(elem, "Enter a valid email address.");
                                }
                            }
                            if (no_error && /date_field/.test(elem.className)) {
                                if (!value.match(/^\d\d\d\d-\d\d-\d\d$/)) {
                                    elem.className = elem.className + ' _has_error';
                                    no_error = false;
                                    tooltip = create_tooltip(elem, "Enter a valid date.");
                                }
                            }
                            tooltip ? resize_tooltip(tooltip) : false;
                            return no_error;
                        };
                        var needs_validate = function (el) {
                            return el.name == 'email' || el.getAttribute('required') !== null;
                        };
                        var validate_form = function (e) {
                            var err = form_to_submit.querySelector('._form_error'), no_error = true;
                            err ? err.parentNode.removeChild(err) : false;
                            if (!submitted) {
                                submitted = true;
                                for (var i = 0, len = allInputs.length; i < len; i++) {
                                    var input = allInputs[i];
                                    if (needs_validate(input)) {
                                        if (input.type == 'text') {
                                            addEvent(input, 'input', function () {
                                                validate_field(this, true);
                                            });
                                        } else if (input.type == 'radio' || input.type == 'checkbox') {
                                            (function (el) {
                                                var radios = form_to_submit.elements[el.name];
                                                for (var i = 0; i < radios.length; i++) {
                                                    addEvent(radios[i], 'click', function () {
                                                        validate_field(el, true);
                                                    });
                                                }
                                            })(input);
                                        } else if (input.tagName == 'SELECT') {
                                            addEvent(input, 'change', function () {
                                                validate_field(input, true);
                                            });
                                        }
                                    }
                                }
                            }
                            remove_tooltips();
                            for (var i = 0, len = allInputs.length; i < len; i++) {
                                var elem = allInputs[i];
                                if (needs_validate(elem)) {
                                    validate_field(elem) ? true : no_error = false;
                                }
                            }
                            if (!no_error && e) {
                                e.preventDefault();
                            }
                            resize_tooltips();
                            return no_error;
                        };
                        addEvent(window, 'resize', resize_tooltips);
                        addEvent(window, 'scroll', resize_tooltips);
                        var form_submit = function (e) {
                            e.preventDefault();
                            if (validate_form()) {
                                var serialized = _form_serialize(document.getElementById('_form_1_'));
                                _load_script('https://gospelcenterlabroche.activehosted.com/proc.php?' + serialized + '&jsonp=true');
                            }
                            return false;
                        };
                        addEvent(form_to_submit, 'submit', form_submit);
                        window._old_serialize = null;
                        if (typeof serialize !== 'undefined') window._old_serialize = window.serialize;
                        _load_script("//d3rxaij56vjege.cloudfront.net/form-serialize/0.3/serialize.min.js", function () {
                            window._form_serialize = window.serialize;
                            if (window._old_serialize) window.serialize = window._old_serialize;
                        });
                    })();
                </script>


            </div>

        </section>

    {% endspaceless %}

{% endblock %}
